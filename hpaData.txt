R.Version() #"R version 3.0.2 (2013-09-25)"

#TODO : prejmenovat promenne
#TODO : documenter
#TODO : prejmenovat headlines sloupce



#install.packages('data.table')
#install.packages('plyr')
#install.packages('dplyr')


#"ACTIVITY_ID" "SUBJ" "tBodyAcc-mean()-X" "tBodyAcc-mean()-Y" "tBodyAcc-mean()-Z" "tBodyAcc-std()-X" "tBodyAcc-std()-Y" "tBodyAcc-std()-Z" "tGravityAcc-mean()-X" "tGravityAcc-mean()-Y" "tGravityAcc-mean()-Z" "tGravityAcc-std()-X" "tGravityAcc-std()-Y" "tGravityAcc-std()-Z" "tBodyAccJerk-mean()-X" "tBodyAccJerk-mean()-Y" "tBodyAccJerk-mean()-Z" "tBodyAccJerk-std()-X" "tBodyAccJerk-std()-Y" "tBodyAccJerk-std()-Z" "tBodyGyro-mean()-X" "tBodyGyro-mean()-Y" "tBodyGyro-mean()-Z" "tBodyGyro-std()-X" "tBodyGyro-std()-Y" "tBodyGyro-std()-Z" "tBodyGyroJerk-mean()-X" "tBodyGyroJerk-mean()-Y" "tBodyGyroJerk-mean()-Z" "tBodyGyroJerk-std()-X" "tBodyGyroJerk-std()-Y" "tBodyGyroJerk-std()-Z" "tBodyAccMag-mean()" "tBodyAccMag-std()" "tGravityAccMag-mean()" "tGravityAccMag-std()" "tBodyAccJerkMag-mean()" "tBodyAccJerkMag-std()" "tBodyGyroMag-mean()" "tBodyGyroMag-std()" "tBodyGyroJerkMag-mean()" "tBodyGyroJerkMag-std()" "fBodyAcc-mean()-X" "fBodyAcc-mean()-Y" "fBodyAcc-mean()-Z" "fBodyAcc-std()-X" "fBodyAcc-std()-Y" "fBodyAcc-std()-Z" "fBodyAcc-meanFreq()-X" "fBodyAcc-meanFreq()-Y" "fBodyAcc-meanFreq()-Z" "fBodyAccJerk-mean()-X" "fBodyAccJerk-mean()-Y" "fBodyAccJerk-mean()-Z" "fBodyAccJerk-std()-X" "fBodyAccJerk-std()-Y" "fBodyAccJerk-std()-Z" "fBodyAccJerk-meanFreq()-X" "fBodyAccJerk-meanFreq()-Y" "fBodyAccJerk-meanFreq()-Z" "fBodyGyro-mean()-X" "fBodyGyro-mean()-Y" "fBodyGyro-mean()-Z" "fBodyGyro-std()-X" "fBodyGyro-std()-Y" "fBodyGyro-std()-Z" "fBodyGyro-meanFreq()-X" "fBodyGyro-meanFreq()-Y" "fBodyGyro-meanFreq()-Z" "fBodyAccMag-mean()" "fBodyAccMag-std()" "fBodyAccMag-meanFreq()" "fBodyBodyAccJerkMag-mean()" "fBodyBodyAccJerkMag-std()" "fBodyBodyAccJerkMag-meanFreq()" "fBodyBodyGyroMag-mean()" "fBodyBodyGyroMag-std()" "fBodyBodyGyroMag-meanFreq()" "fBodyBodyGyroJerkMag-mean()" "fBodyBodyGyroJerkMag-std()" "fBodyBodyGyroJerkMag-meanFreq()"


#library(plyr)
library(data.table) #better for large datasets
library(dplyr) #good for aggregations


#You should create one R script called run_analysis.R that does the following.

#Merges the training and the test sets to create one data set.
#Extracts only the measurements on the mean and standard deviation for each measurement.
#Uses descriptive activity names to name the activities in the data set
#Appropriately labels the data set with descriptive variable names.
#From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.


fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
setwd('/home/vilem_reznicek/Development/RStudio_projects/RStudio_projects/coursera')

if (!file.exists('./download/UCI HAR Dataset.zip')){
  message("The Source data in a ZipArchive is being downloaded...")
  download.file(fileurl,'./download/UCI HAR Dataset.zip', mode = 'wb')
  unzip("./download/UCI HAR Dataset.zip", exdir = './')
}

if (!file.exists('./UCI HAR Dataset/')){
  message("Source data is being extracted to folder : UCI HAR Dataset")
  unzip("./download/UCI HAR Dataset.zip", exdir = './')
}

#Read Feature column names from file
featureColumnNames <- read.table("UCI HAR Dataset/features.txt",header = FALSE)
featureColumnNames <- as.character(featureColumnNames[,2])

#Read Activity names from file
activityLabels <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)

#Read sub sets Subjects, Features, Activities from Train and Test folders
temp_train_x = read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
temp_train_y = read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)

temp_test_x = read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
temp_test_y = read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)

temp_train_subject = read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
temp_test_subject  = read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)

#RBIND - UNION ALL subsets
temp_x_both = rbind(temp_train_x,temp_test_x)
temp_y_both = rbind(temp_train_y,temp_test_y) 
temp_subject_both = rbind(temp_train_subject,temp_test_subject) 

#subj, activity , x (features)
fullDataSett = cbind(temp_subject_both, temp_y_both, temp_x_both  )

colnames(fullDataSett) <- c(c('SUBJECT','ACTIVITY'),featureNames)

head(fullDataSett)

#Select STDDEV&MEAN type column and apply naming conventions
col.select <-grep('mean|std',featureNames)
data.sub <- fullDataSett[,c(1,2,col.select +2)]


head(data.sub)

rename_cols = function(data.sub) {
  name.new <- names(data.sub)
  name.new <- gsub("[(][)]", "", name.new)
  name.new <- gsub("^t", "TIME_", name.new)
  name.new <- gsub("^f", "FREQUENCY_", name.new)
  name.new <- gsub("Acc", "ACCELERATION", name.new)
  name.new <- gsub("Gyro", "GYROSENSOR", name.new)
  name.new <- gsub("Mag", "MAGNITUDE", name.new)
  name.new <- gsub("-mean-", "_MEAN_", name.new)
  name.new <- gsub("-std-", "_STD_DEV_", name.new)
  name.new <- gsub("Body", "BODY_", name.new)
  name.new <- gsub("-", "_", name.new)
  names(data.sub) <- name.new
  #BodyBody
}

data.sub = rename_cols(data.sub)

head(data.sub)

activityLabels <- as.character(activityLabels[,2])
activityLabels

data.sub$ACTIVITY_ID <-activityLabels[data.sub$ACTIVITY_ID]

data.tidy <- aggregate(data.sub[,3:81], by = list(ACTIVITY_ID = data.sub$ACTIVITY_ID, SUBJ = data.sub$SUBJ),FUN = mean)
head(data.tidy)





write.table(x = data.tidy, file = "data_tidy.txt", row.names = FALSE)


